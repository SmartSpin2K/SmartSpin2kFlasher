name: CI

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: win-x86
            os: windows-2019
            architecture: x86
            artifact_pattern: "*"
          - name: win-x64
            os: windows-2019
            architecture: x64
            artifact_pattern: "*"
          - name: linux-x64
            os: ubuntu-22.04
            architecture: x64
            artifact_pattern: "*"
          - name: osx-x64
            os: macOS-latest
            architecture: x64
            artifact_pattern: "*.app"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.x'
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        run: |
          sudo apt install libgtk-3-dev libnotify-dev libsdl2-dev
          pip install -U \
           -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-22.04 \
           wxPython
      - name: Install requirements
        run: |
          pip install Pillow
          pip install -r requirements.txt -r requirements_build.txt
          pip install -e .
      - name: Run PyInstaller
        run: |
          python -m PyInstaller.__main__ -F -w -n SmartSpin2kFlasher -i icon.ico esphomeflasher/__main__.py
      - name: Create artifacts
        run: |
          7z a SmartSpin2kFlasher-${{ matrix.name }}.zip ./dist/${{ matrix.artifact_pattern }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SmartSpin2kFlasher-${{ matrix.name }}
          path: SmartSpin2kFlasher-${{ matrix.name }}.zip

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: all-my-files
          pattern: my-artifact-*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: my-artifact-*
          merge-multiple: true
          
      - name: Get tag info
        id: tag_info
        run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_info.outputs.SOURCE_TAG }}
          name: SmartSpin2kFlasher ${{ steps.tag_info.outputs.SOURCE_TAG }}
          draft: false
          prerelease: false
          body: ${{ github.event.head_commit.message }}
          files: |
            SmartSpin2kFlasher-*.zip
